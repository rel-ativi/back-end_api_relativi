"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addressRoutes = void 0;
const express_1 = require("express");
const addresses_controller_1 = require("../controllers/addresses.controller");
const admStatus_middleware_1 = require("../middlewares/admStatus.middleware");
const authStatus_middleware_1 = require("../middlewares/authStatus.middleware");
const schemaValidation_middleware_1 = require("../middlewares/schemaValidation.middleware");
const address_schema_1 = require("../schemas/address.schema");
const generic_schema_1 = require("../schemas/generic.schema");
const routes = (0, express_1.Router)();
const addressRoutes = () => {
    routes.post("", authStatus_middleware_1.authStatusMiddleware, (0, schemaValidation_middleware_1.schemaValidationMiddleware)(address_schema_1.addressSchema), addresses_controller_1.addressesCreateController);
    routes.post("/districts", authStatus_middleware_1.authStatusMiddleware, admStatus_middleware_1.admStatusMiddleware, (0, schemaValidation_middleware_1.schemaValidationMiddleware)(generic_schema_1.nameOnlySchema), addresses_controller_1.districtCreateController);
    routes.post("/cities", authStatus_middleware_1.authStatusMiddleware, admStatus_middleware_1.admStatusMiddleware, (0, schemaValidation_middleware_1.schemaValidationMiddleware)(generic_schema_1.nameOnlySchema), addresses_controller_1.cityCreateController);
    routes.post("/states", authStatus_middleware_1.authStatusMiddleware, admStatus_middleware_1.admStatusMiddleware, (0, schemaValidation_middleware_1.schemaValidationMiddleware)(generic_schema_1.nameOnlySchema), addresses_controller_1.stateCreateController);
    routes.post("/countries", authStatus_middleware_1.authStatusMiddleware, admStatus_middleware_1.admStatusMiddleware, (0, schemaValidation_middleware_1.schemaValidationMiddleware)(generic_schema_1.nameOnlySchema), addresses_controller_1.countryCreateController);
    routes.get("", authStatus_middleware_1.authStatusMiddleware, addresses_controller_1.listUserAddressesController);
    routes.get("/all", admStatus_middleware_1.admStatusMiddleware, authStatus_middleware_1.authStatusMiddleware, addresses_controller_1.listAllAddressesController);
    routes.get("/districts", authStatus_middleware_1.authStatusMiddleware, addresses_controller_1.listDistrictsController);
    routes.get("/cities", authStatus_middleware_1.authStatusMiddleware, addresses_controller_1.listCitiesController);
    routes.get("/states", authStatus_middleware_1.authStatusMiddleware, addresses_controller_1.listStatesController);
    routes.get("/countries", authStatus_middleware_1.authStatusMiddleware, addresses_controller_1.listCountriesController);
    routes.patch("/:id", authStatus_middleware_1.authStatusMiddleware, addresses_controller_1.addressesUpdateController);
    routes.delete("/:id", authStatus_middleware_1.authStatusMiddleware, addresses_controller_1.addressDeleteController);
    routes.delete("/districts/:id", authStatus_middleware_1.authStatusMiddleware, admStatus_middleware_1.admStatusMiddleware, addresses_controller_1.deleteDistrictController);
    routes.delete("/cities/:id", authStatus_middleware_1.authStatusMiddleware, admStatus_middleware_1.admStatusMiddleware, addresses_controller_1.deleteCityController);
    routes.delete("/states/:id", authStatus_middleware_1.authStatusMiddleware, admStatus_middleware_1.admStatusMiddleware, addresses_controller_1.deleteStateController);
    routes.delete("/countries/:id", authStatus_middleware_1.authStatusMiddleware, admStatus_middleware_1.admStatusMiddleware, addresses_controller_1.deleteCountryController);
    return routes;
};
exports.addressRoutes = addressRoutes;
